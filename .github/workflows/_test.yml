name: test

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
        description: "From which folder this pipeline executes"

env:
  POETRY_VERSION: "1.7.1"

jobs:
  build:
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.12"
    name: "run test #${{ matrix.python-version }}"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }} + Poetry ${{ env.POETRY_VERSION }}
        uses: "./.github/actions/poetry_setup"
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: ${{ env.POETRY_VERSION }}
          working-directory: ${{ inputs.working-directory }}
          cache-key: core

      - uses: extractions/setup-just@v2

      - name: Install dependencies
        shell: bash
        run: just install

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.11.0

      - name: Run core tests
        shell: bash
        run: |
          just test

      - name: Start local Atlas
        working-directory: .
        run: bash scripts/start_local_atlas.sh

      - name: Get MongoDB URI
        working-directory: .
        run: cat .local_atlas_uri >> $GITHUB_ENV

      - name: Install Ollama
        run: curl -fsSL https://ollama.com/install.sh | sh

      - name: Run Ollama
        run: |
          ollama serve &
          sleep 5    # wait for the Ollama server to be ready
          ollama pull all-minilm:l6-v2

      - name: Run integration tests
        run: just integration_tests
        working-directory: ${{ inputs.working-directory }}

      - name: Ensure the tests did not create any additional files
        shell: bash
        run: |
          set -eu

          STATUS="$(git status)"
          echo "$STATUS"

          # grep will exit non-zero if the target message isn't found,
          # and `set -e` above will cause the step to fail.
          echo "$STATUS" | grep 'nothing to commit, working tree clean'
